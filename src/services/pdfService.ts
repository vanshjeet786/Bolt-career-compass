import jsPDF from 'jspdf';

export class PDFService {
  async generateReport(
    userResults: {
      scores: Record<string, number>;
      careers: string[];
      recommendations: string;
      userName: string;
    }
  ): Promise<void> {
    const pdf = new jsPDF('p', 'mm', 'a4');
    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();
    
    // Header
    pdf.setFontSize(24);
    pdf.setTextColor(59, 130, 246); // Blue
    pdf.text('Career Assessment Report', pageWidth / 2, 30, { align: 'center' });
    
    pdf.setFontSize(16);
    pdf.setTextColor(0, 0, 0);
    pdf.text(`For: ${userResults.userName}`, pageWidth / 2, 45, { align: 'center' });
    
    pdf.setFontSize(12);
    pdf.text(`Generated on: ${new Date().toLocaleDateString()}`, pageWidth / 2, 55, { align: 'center' });
    
    // Summary Section
    let yPosition = 75;
    pdf.setFontSize(18);
    pdf.setTextColor(59, 130, 246);
    pdf.text('Assessment Summary', 20, yPosition);
    
    yPosition += 15;
    pdf.setFontSize(12);
    pdf.setTextColor(0, 0, 0);
    
    // Top Strengths
    const topScores = Object.entries(userResults.scores)
      .filter(([_, score]) => typeof score === 'number')
      .sort(([,a], [,b]) => (b as number) - (a as number))
      .slice(0, 5);
    
    pdf.text('Top Intelligence Areas:', 20, yPosition);
    yPosition += 8;
    
    topScores.forEach(([category, score], i) => {
      pdf.text(`${i + 1}. ${category}: ${(score as number).toFixed(1)}/5.0`, 25, yPosition);
      yPosition += 8;
    });
    
    // Recommended Careers
    yPosition += 10;
    pdf.setFontSize(18);
    pdf.setTextColor(59, 130, 246);
    pdf.text('Recommended Career Paths', 20, yPosition);
    
    yPosition += 15;
    pdf.setFontSize(12);
    pdf.setTextColor(0, 0, 0);
    
    userResults.careers.slice(0, 8).forEach((career) => {
      pdf.text(`â€¢ ${career}`, 25, yPosition);
      yPosition += 8;
    });
    
    // AI Recommendations
    if (yPosition > pageHeight - 60) {
      pdf.addPage();
      yPosition = 30;
    }
    
    yPosition += 10;
    pdf.setFontSize(18);
    pdf.setTextColor(59, 130, 246);
    pdf.text('AI Counselor Insights', 20, yPosition);
    
    yPosition += 15;
    pdf.setFontSize(12);
    pdf.setTextColor(0, 0, 0);
    
    const splitText = pdf.splitTextToSize(userResults.recommendations, pageWidth - 40);
    pdf.text(splitText, 20, yPosition);
    
    // Footer
    pdf.setFontSize(10);
    pdf.setTextColor(128, 128, 128);
    pdf.text('Generated by AI Career Counselor - Your Journey to Career Clarity', 
      pageWidth / 2, pageHeight - 15, { align: 'center' });
    
    // Download the PDF
    pdf.save(`career-assessment-${userResults.userName.replace(/\s+/g, '-')}.pdf`);
  }
}

export const pdfService = new PDFService();